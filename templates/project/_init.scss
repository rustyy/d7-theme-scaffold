/////////////////////////////////////////////////////////////////////////////
// This file was generated by d7-theme-scaffold compass plugin.	           //
// It gives you a basic scaffold to start with.					           //
// You can modify it to fit your personal needs.				           //
/////////////////////////////////////////////////////////////////////////////

////////////////////
// Variables go here.
////////////////////

// Sprites for fixed elements.
$map-fixed: sprite-map("fixed/*.png", $spacing: 30px);

////////////////////
// Mixins go here.
////////////////////

// Set dimensions of an HTML-element based on image-dimensions of a given image.
// @Parameters:
//    - $image: the image-file relative to project's images directory
//    - $set-width: Set the width. Default: false.
//    - $set-height: Set the height. Default: false.
@mixin set-dimensions($image, $set-width: true, $set-height: true) {
  @if $set-width {
    width: image-width($image);
  }

  @if $set-height {
    height: image-height($image);
  }
}

// This is a custom mixin for the fixe-elements-sprite.
// Use this instead of the build-in compass mixins.
// @Parameters:
//    - $sprite: name of the image to be provided
//    - $hover: if true, hover state is provided. Default: false.
//    - $offset-x: set an offset for x-axis. Default: 0.
//    - $offset-y: set an offset for y-axis. Default: 0.
//    - $hide-text: if true, text won't be displayed, due to text-indent. Default: false.
//    - $set-dimensions: if true, the icons dimensions will be set to the html-element. Default: false.
//    - $map: pass a sprite-map to the mixin. Default: $map-fixed.
@mixin sprite-it($sprite, $hover: false, $offset-x: 0, $offset-y: 0, $hide-text: false, $set-dimensions: false, $map: $map-fixed) {
  background: sprite($map, $sprite, $offset-x, $offset-y) no-repeat;

  @if $hover {
    &:hover {
      background-position: sprite-position($map, #{$sprite}_hover, $offset-x, $offset-y);
    }
  }

  @if $hide-text {
    text-indent: -999em;
  }

  @if $set-dimensions {
    @include set-dimensions(sprite-file($map, $sprite));
  }
}

////////////////////
// Functions go here.
////////////////////

// Function to build a multiple selector based on a list.
// @param $list, e.g. (val1 val2 val3)
// @param $prefix, optional: set a prefix for the values, e.g. '.my-prefix-' is compiled to: '.my-prefix-VALUE'.
// @param $suffix, optional: set a suffix for the values, e.g. '-my-suffix' is compiled to: 'VALUE-my-suffix'.
// @return $selector, e.g. .val1, val2, val3
@function build-selector($list, $prefix: null, $suffix: null) {
  $selector: ();
  @each $el in $list {
    $selector: append($selector, unquote(#{$prefix}#{$el}#{$suffix}), comma);
  }
  @return $selector;
}